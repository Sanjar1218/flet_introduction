import matplotlib
import matplotlib.pyplot as plt

import flet as ft
from flet.matplotlib_chart import MatplotlibChart

import base64
import cv2
import numpy as np

from PIL import Image

# matplotlib.use("svg")


def main(page: ft.Page):
    # img = b'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'
    # with open('assets/img.png', 'rb') as f:
    #     img = f.read()
    # img = Image.open(img)
    img = cv2.imread('assets/img.png')
    print(len(img))
    # img = img.tobytes()
    # img = base64.b64encode(img)
    # # this converts base64 to array
    img = np.frombuffer(base64.b64decode(img), np.uint8)
    # print(img.reshape(101, 101, 3))
    print(img)
    # you can do anything you want with here

    # img = cv2.imread('assets/img.png')
    print(img.shape)
    # img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
    # img = cv2.cvtColor(img, cv2.COLOR_GRAY2RGB)

    # img = np.dstack((img, img, img))

    # this convert array to base64
    # img = img.tobytes()

    # retval, buffer = cv2.imencode('img.png', img)
    # print(buffer)
    img = base64.b64encode(img)
    with open('img.json', 'w') as f:
        f.write(img.decode())
    print(len(img))

    page.add(ft.Slider())
    page.add(ft.Image(src_base64=img.decode()))


ft.app(target=main)
